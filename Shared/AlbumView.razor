@using MudBlazor
@using RadioHeardleServer.Data;


<MudContainer Style="height: 100%">
	<MudStack Justify="Justify.SpaceEvenly" Spacing="1">

		<MudStack Row="true" Justify="Justify.SpaceBetween">

			<MudStack Row="true" Justify="Justify.FlexStart">
				<MudButton OnClick="OnClickBack" Color="Color.Tertiary" Size="Size.Small">Back</MudButton>
			</MudStack>

			<MudText Align="Align.Right" Typo="Typo.h5">@Title</MudText>	

		</MudStack>
		

		<MudStack Spacing="0">
			@foreach(var song in Songs)
			{
				@*<MudChip  OnClick="() => OnClickChip(song._songName)" Disabled="@(GuessedSongs.Contains(song._songName))" Style="@Style" Text="@song._songName"></MudChip>*@
				<MudButton Variant="Variant.Outlined" OnClick="() => OnClickChip(song._songName)" Disabled="@(GuessedSongs.Contains(song._songName))" Style="@Style">@song._songName</MudButton>
			}
		</MudStack>
	</MudStack>
</MudContainer>

@code {
	[Parameter]
	public string Title { get; set; }

	[Parameter]
	public List<SongData> Songs { get; set; }

	[Parameter]
	public List<string> GuessedSongs { get; set; }

	[Parameter]
	public string Style { get; set; }

	[Parameter]
	public EventCallback<string> OnClickSong { get; set; }

	[Parameter]
	public EventCallback OnBack { get; set; }

	private void OnClickChip(string song)
	{
		OnClickSong.InvokeAsync(song);
	}

	private void OnClickBack()
	{
		OnBack.InvokeAsync();
	}
}
